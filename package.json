{
	"name": "gel",
	"description": "The design system and react components for Westpac GEL",
	"repository": "https://github.com/WestpacGEL/GEL",
	"author": "Westpac GEL Team <gel@westpac.com.au>",
	"contributors": [
		{
			"name": "Dominik Wilkowski",
			"email": "Hi@Dominik-Wilkowski.com",
			"url": "https://dominik-wilkowski.com"
		},
		{
			"name": "Joss Mackison",
			"email": "joss@thinkmill.com.au",
			"url": "http://jossmackison.me"
		}
	],
	"license": "GPL-3.0+",
	"private": true,
	"scripts": {
		"dev": "/bin/sh -c 'cd components/${1:-$0} && yarn start'",
		"docs": "webpack-dev-server --progress --config ./helpers/example/docs.webpack.config.js",
		"docs:build": "NODE_ENV=development webpack --progress --config ./helpers/example/docs.webpack.config.js && yarn docs:redirects",
		"docs:redirects": "cp helpers/public/* docs/",
		"start": "cd website && yarn start",
		"nuke": "yarn nuke:lock && yarn nuke:node_modules",
		"nuke:node_modules": "find ./components -type d -name 'node_modules' -exec rm -rf {} + && find ./brands -type d -name 'node_modules' -exec rm -rf {} + && rm -rf node_modules",
		"nuke:lock": "rm yarn.lock && rm yarn-error.log ; true",
		"build": "preconstruct build && build-field-types build",
		"build:dev": "preconstruct dev",
		"fresh": "yarn nuke && yarn",
		"new": "node ./helpers/cli.js",
		"format": "prettier --write \"**/*.{js,md,mdx,json}\"",
		"test:format": "prettier --list-different \"**/*.{js,md,mdx,json}\"",
		"test:unit": "jest",
		"test:unit-watch": "jest --watchAll --coverage",
		"test:integration": "node helpers/tester.js",
		"test": "yarn test:format && yarn test:unit && yarn test:integration",
		"dep:test": "manypkg check && preconstruct build || preconstruct dev",
		"dep:fix": "manypkg fix",
		"GELjson": "node helpers/ds-info.js",
		"postinstall": "yarn dep:test && preconstruct dev && yarn GELjson && build-field-types dev",
		"publish-packages": "yarn build && yarn GELjson && yarn changeset publish",
		"version-packages": "yarn changeset version",
		"deploy:staging:sync": "pm2 deploy pm2-ecosystem.json staging",
		"deploy:staging:restart": "ssh deploy@165.22.110.244 forever restart /srv/blender/server/server.js",
		"deploy:staging:msg": "echo \"If you made changes to the nginx config follow below steps:\n\n1. Log into the server: \\x1b[33mssh deploy@165.22.110.244\\x1b[0m\n2. Copy the file: \\x1b[33msudo cp /srv/pm2-apps/gel3-website/source/nginx/gel3-keystone-routes.conf /etc/nginx/snippets/gel3-keystone-routes.conf\\x1b[0m\n3. Test the new config: \\x1b[33msudo nginx -t\\x1b[0m\n4. If there are errors correct them in this repo and start again from scratch by running \\x1b[33myarn deploy:staging\\x1b[0m\n5. If all is well run \\x1b[33msudo nginx -s reload\\x1b[0m\n6. ✨ Done\n\"",
		"deploy:staging": "yarn deploy:staging:sync && yarn deploy:staging:restart && yarn deploy:staging:msg",
		"deploy:live:sync": "pm2 deploy pm2-ecosystem.json live",
		"deploy:live:restart": "ssh deploy@128.199.200.220 forever restart /srv/blender/server/server.js",
		"deploy:live:msg": "echo \"If you made changes to the nginx config follow below steps:\n\n1. Log into the server: \\x1b[33mssh deploy@128.199.200.220\\x1b[0m\n2. Copy the file: \\x1b[33msudo cp /srv/pm2-apps/gel3-website/source/nginx/gel3-keystone-routes.conf /etc/nginx/snippets/gel3-keystone-routes.conf\\x1b[0m\n3. Test the new config: \\x1b[33msudo nginx -t\\x1b[0m\n4. If there are errors correct them in this repo and start again from scratch by running \\x1b[33myarn deploy:live\\x1b[0m\n5. If all is well run \\x1b[33msudo nginx -s reload\\x1b[0m\n6. ✨ Done\n\"",
		"deploy:live": "yarn deploy:staging:sync && yarn deploy:live:restart && yarn deploy:staging:msg"
	},
	"workspaces": [
		"brands/*",
		"components/*",
		"website",
		"website/field-content"
	],
	"field-types": {
		"packages": [
			"website/field-content"
		]
	},
	"preconstruct": {
		"packages": [
			"website/field-content",
			"components/*",
			"brands/*"
		]
	},
	"jest": {
		"displayName": "GEL3",
		"testRegex": "\\.spec.js$",
		"collectCoverageFrom": [
			"components/*/src/**/*.js"
		],
		"setupFilesAfterEnv": [
			"./helpers/tests/jest-extended.js"
		],
		"transformIgnorePatterns": [
			"/node_modules/(?!@westpac/*).+\\.js$"
		]
	},
	"dependencies": {
		"@babel/cli": "^7.8.4",
		"@babel/core": "^7.9.6",
		"@babel/plugin-proposal-class-properties": "^7.8.3",
		"@babel/plugin-transform-runtime": "^7.9.6",
		"@babel/preset-env": "^7.9.6",
		"@babel/preset-react": "^7.9.4",
		"@changesets/cli": "^2.6.5",
		"@emotion/core": "^10.0.28",
		"@emotion/weak-memoize": "^0.2.5",
		"@manypkg/cli": "^0.12.0",
		"@preconstruct/cli": "^1.1.14",
		"@testing-library/jest-dom": "^5.5.0",
		"@testing-library/react": "^10.0.4",
		"babel-core": "^7.0.0-bridge.0",
		"babel-jest": "^26.0.1",
		"babel-loader": "^8.1.0",
		"babel-loader-exclude-node-modules-except": "^1.0.3",
		"babel-plugin-codegen": "^4.0.1",
		"cfonts": "^2.8.2",
		"chalk": "^4.0.0",
		"color": "^3.1.2",
		"common-tags": "^1.8.0",
		"copy-webpack-plugin": "^5.1.1",
		"core-js": "^3.6.5",
		"cypress": "^4.5.0",
		"facepaint": "^1.2.1",
		"focus-trap-react": "^6.0.0",
		"get-workspaces": "^1.0.1",
		"html-webpack-plugin": "^3.2.0",
		"html-webpack-root-plugin": "^0.10.0",
		"jest": "^26.0.1",
		"jest-cli": "^26.0.1",
		"lodash.clonedeep": "^4.5.0",
		"lodash.merge": "^4.6.2",
		"mini-svg-data-uri": "^1.2.3",
		"parse-prop-types": "^0.3.0",
		"pm2": "^4.4.0",
		"prettier": "^2.0.5",
		"prop-types": "^15.7.2",
		"raf": "^3.4.1",
		"react": "^16.13.1",
		"react-app-polyfill": "^1.0.6",
		"react-dom": "^16.13.1",
		"react-focus-lock": "^2.3.1",
		"react-router-dom": "^5.1.2",
		"react-spring": "^8.0.27",
		"regenerator-runtime": "^0.13.5",
		"resize-observer-polyfill": "^1.5.1",
		"shortid": "^2.2.15",
		"start-server-and-test": "^1.11.0",
		"tmp": "^0.2.1",
		"webpack": "^4.43.0",
		"webpack-cli": "^3.3.11",
		"webpack-dev-server": "^3.10.3"
	},
	"resolutions": {
		"ansi-styles": "^3.2.0"
	}
}
