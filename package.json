{
  "name": "gel",
  "version": "0.0.0",
  "private": true,
  "description": "The Westpac GEL Design System components, brand tokens and website monorepo",
  "repository": "https://github.com/WestpacGEL/GEL",
  "license": "GPL-3.0+",
  "author": "Westpac GEL Team <gel@westpac.com.au>",
  "contributors": [
    {
      "name": "Dominik Wilkowski",
      "email": "Hi@Dominik-Wilkowski.com",
      "url": "https://dominik-wilkowski.com"
    },
    {
      "name": "Joss Mackison",
      "email": "joss@thinkmill.com.au",
      "url": "http://jossmackison.me"
    }
  ],
  "workspaces": [
    "brands/*",
    "components/*",
    "website",
    "website/field-content",
    "website-backend"
  ],
  "scripts": {
    "GELjson": "node helpers/ds-info.js",
    "build": "yarn build:dynamicblocks && preconstruct build",
    "build:dev": "preconstruct dev",
    "build:dynamicblocks": "node helpers/dynamic-blocks.js",
    "build:icons": "ts-node --project tsconfig.prop-types.json --esm ./helpers/generateIcons.ts", 
    "build:watch": "preconstruct watch",
    "dep:fix": "manypkg fix && preconstruct fix",
    "dep:test": "manypkg check && preconstruct build",
    "deploy:live": "yarn deploy:live:sync && yarn deploy:live:restart && yarn deploy:live:msg",
    "deploy:live:msg": "echo \"If you made changes to the nginx config follow below steps:\n\n1. Log into the server: \\x1b[33mssh deploy@128.199.200.220\\x1b[0m\n2. Copy the file: \\x1b[33msudo cp /srv/pm2-apps/gel3-website/source/nginx/gel3-keystone-routes.conf /etc/nginx/snippets/gel3-keystone-routes.conf\\x1b[0m\n3. Test the new config: \\x1b[33msudo nginx -t\\x1b[0m\n4. If there are errors correct them in this repo and start again from scratch by running \\x1b[33myarn deploy:live\\x1b[0m\n5. If all is well run \\x1b[33msudo nginx -s reload\\x1b[0m\n6. ✨ Done\n\"",
    "deploy:live:restart": "ssh deploy@128.199.200.220 forever restart /srv/blender/server/server.js",
    "deploy:live:sync": "pm2 deploy pm2-ecosystem.json live",
    "deploy:staging": "yarn deploy:staging:sync && yarn deploy:staging:restart && yarn deploy:staging:msg",
    "deploy:staging:msg": "echo \"If you made changes to the nginx config follow below steps:\n\n1. Log into the server: \\x1b[33mssh deploy@165.22.110.244\\x1b[0m\n2. Copy the file: \\x1b[33msudo cp /srv/pm2-apps/gel3-website/source/nginx/gel3-keystone-routes.conf /etc/nginx/snippets/gel3-keystone-routes.conf\\x1b[0m\n3. Test the new config: \\x1b[33msudo nginx -t\\x1b[0m\n4. If there are errors correct them in this repo and start again from scratch by running \\x1b[33myarn deploy:staging\\x1b[0m\n5. If all is well run \\x1b[33msudo nginx -s reload\\x1b[0m\n6. ✨ Done\n\"",
    "deploy:staging:restart": "ssh deploy@165.22.110.244 forever restart /srv/blender/server/server.js",
    "deploy:staging:sync": "pm2 deploy pm2-ecosystem.json staging",
    "dev": "/bin/sh -c 'cd components/${1:-$0} && yarn start'",
    "dev:backend": "yarn build && yarn --cwd website-backend dev",
    "dev:frontend": "yarn build && yarn --cwd website dev",
    "docs": "NODE_ENV=development webpack server --progress --config ./helpers/example/docs.webpack.config.js",
    "docs:build": "NODE_ENV=development webpack --progress --config ./helpers/example/docs.webpack.config.js && yarn docs:redirects",
    "docs:redirects": "cp helpers/public/* docs/",
    "format": "prettier --list-different \"**/*.{js,md,mdx,json,ts,tsx}\"",
    "format:fix": "prettier --write \"**/*.{js,md,mdx,json,ts,tsx}\"",
    "fresh": "yarn nuke && yarn",
    "postinstall": "yarn dep:test && preconstruct dev && yarn GELjson && yarn build:dynamicblocks",
    "lint": "eslint '**/*.{js,ts,tsx}'",
    "lint:fix": "eslint '**/*.{js,ts,tsx}' --fix",
    "lint:format:fix": "yarn lint:fix && yarn format:fix",
    "new": "node ./helpers/cli.js",
    "nuke": "yarn nuke:lock && yarn nuke:node_modules",
    "nuke:lock": "rm yarn.lock && rm yarn-error.log ; true",
    "nuke:node_modules": "find ./components -type d -name 'node_modules' -exec rm -rf {} + && find ./brands -type d -name 'node_modules' -exec rm -rf {} + && rm -rf node_modules",
    "prepare": "husky install",
    "prop-types": "ts-node --project tsconfig.prop-types.json --esm ./helpers/generateProptypes.ts",
    "publish-packages": "yarn build && yarn GELjson && yarn changeset publish",
    "start": "yarn build:dynamicblocks && (trap 'kill 0' SIGINT; yarn --cwd website dev & yarn --cwd website-backend dev ; wait)",
    "test": "yarn test:format && yarn test:unit && yarn test:integration",
    "test:ci": "yarn test:format && yarn test:unit:ci && yarn test:integration",
    "test:format": "yarn format && yarn lint",
    "test:integration": "node helpers/tester.js",
    "test:types": "/bin/sh -c 'cd components/${1:-$0} && tsc'",
    "test:unit": "jest",
    "test:unit-watch": "jest --watchAll --coverage",
    "test:unit:ci": "jest --runInBand --ci",
    "version-packages": "yarn changeset version"
  },
  "jest": {
    "collectCoverageFrom": [
      "components/*/src/**/*.{js,jsx,ts,tsx}"
    ],
    "displayName": "GEL3",
    "setupFilesAfterEnv": [
      "./helpers/tests/jest-extended.js"
    ],
    "testEnvironment": "jsdom",
    "testRegex": "\\.spec.[jt]sx?$",
    "transformIgnorePatterns": [
      "/node_modules/(?!@westpac/*).+\\.{js,jsx,ts,tsx}$"
    ]
  },
  "resolutions": {
    "ansi-styles": "^3.2.0",
    "next": "12.2.4"
  },
  "dependencies": {
    "@babel/cli": "^7.14.8",
    "@babel/core": "^7.14.8",
    "@babel/plugin-proposal-class-properties": "^7.14.5",
    "@babel/plugin-transform-runtime": "^7.14.5",
    "@babel/preset-env": "^7.14.8",
    "@babel/preset-react": "^7.14.5",
    "@babel/preset-typescript": "^7.16.7",
    "@babel/runtime": "^7.14.8",
    "@changesets/cli": "^2.16.0",
    "@emotion/react": "^11.10.6",
    "@emotion/weak-memoize": "^0.2.5",
    "@manypkg/cli": "^0.18.0",
    "@preconstruct/cli": "^2.2.2",
    "@react-spring/web": "^9.2.4",
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^14.4.3",
    "@types/prop-types": "^15.7.5",
    "babel-core": "^7.0.0-bridge.0",
    "babel-jest": "^27.0.6",
    "babel-loader": "^8.2.2",
    "babel-loader-exclude-node-modules-except": "^1.2.1",
    "babel-plugin-codegen": "^4.1.4",
    "cfonts": "^2.9.3",
    "chalk": "^4.1.1",
    "color": "^4.0.0",
    "common-tags": "^1.8.0",
    "copy-webpack-plugin": "^9.0.1",
    "core-js": "^3.15.2",
    "cypress": "^8.0.0",
    "eslint": "^8.28.0",
    "eslint-config-next": "^13.0.5",
    "eslint-config-prettier": "^8.6.0",
    "eslint-plugin-prettier": "^4.2.1",
    "facepaint": "^1.2.1",
    "get-workspaces": "^1.0.3",
    "html-webpack-plugin": "^5.3.2",
    "husky": "^8.0.3",
    "jest": "^27.0.6",
    "jest-cli": "^27.0.6",
    "lodash.clonedeep": "^4.5.0",
    "lodash.merge": "^4.6.2",
    "mini-svg-data-uri": "^1.3.3",
    "parse-prop-types": "^0.3.0",
    "pm2": "^5.0.0",
    "prettier": "^2.3.2",
    "prop-types": "^15.7.2",
    "raf": "^3.4.1",
    "react": "^18.2.0",
    "react-app-polyfill": "^2.0.0",
    "react-docgen": "^5.4.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^5.2.0",
    "regenerator-runtime": "^0.13.7",
    "resize-observer-polyfill": "^1.5.1",
    "shortid": "^2.2.16",
    "start-server-and-test": "^1.12.6",
    "tmp": "^0.2.1",
    "ts-node": "^10.4.0",
    "typescript": "^4.5.4",
    "typescript-to-proptypes": "^2.2.1",
    "webpack": "^5.45.1",
    "webpack-cli": "^4.7.2",
    "webpack-dev-server": "^4.0.0"
  },
  "packageManager": "yarn@1.22.19",
  "engines": {
    "node": "16.x"
  },
  "preconstruct": {
    "packages": [
      "components/*",
      "brands/*"
    ]
  }
}
